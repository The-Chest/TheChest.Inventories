name: SonarCloud analysis

on:
  push:
    branches: 
      - 'master'
      - 'src/*' 
      - 'src/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: 
      - 'master'
    paths:
      - 'src/*' 
      - 'src/**'

permissions:
  pull-requests: read

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Add NuGet source
        run: dotnet nuget add source https://nuget.pkg.github.com/The-Chest/index.json --name github --username The-Chest --password "${{ secrets.NUGET_APIKEY }}" --store-password-in-clear-text
      
      - name: Restore dependencies
        run: dotnet restore 
        shell: bash
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' 

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner    

      - name: Update SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Dotnet restore tools
        run: dotnet tool restore 
        
      - name: Begin Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner begin 
          /k:"The-Chest_TheChest.Inventories" 
          /o:"the-chest" 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
          /d:sonar.host.url="https://sonarcloud.io" 
          /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"
          /d:sonar.scanner.scanAll=false
      
      - name: Build Project
        run: dotnet build 
          --configuration Release 
          --no-restore

      - name: Run Coverage Report
        continue-on-error: true 
        run: dotnet test 
          --collect:"XPlat Code Coverage;Format=opencover" 
          --results-directory TestResults/ 
          --configuration Release 

      - name: Send Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner end 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
